<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <ParameterDefaultValues />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='ftk' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select a Fund' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' source-field='[federated.0r40rqj0micewz15da90h1vee2mc].[Pivot Field Names]' type='nominal' value='&quot;Fund&quot;'>
        <calculation class='tableau' formula='&quot;Fund&quot;' />
      </column>
      <column caption='Select a Benchmark' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' source-field='[federated.0r40rqj0micewz15da90h1vee2mc].[Pivot Field Names]' type='nominal' value='&quot;Benchmark&quot;'>
        <calculation class='tableau' formula='&quot;Benchmark&quot;' />
      </column>
      <column caption='Select a Risk-free rate' datatype='string' name='[Select a Benchmark (copy)_1953154924772741124]' param-domain-type='list' role='measure' source-field='[federated.0r40rqj0micewz15da90h1vee2mc].[Pivot Field Names]' type='nominal' value='&quot;RFR&quot;'>
        <calculation class='tableau' formula='&quot;RFR&quot;' />
      </column>
    </datasource>
    <datasource caption='data' inline='true' name='federated.0r40rqj0micewz15da90h1vee2mc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.06bz07v1klts131bt6rhb0wdu6by'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/kc111/Dev/ftk-tableau/data/data.csv' dataRefreshTime='' directory='C:/Users/kc111/Dev/ftk-tableau/data' filename='C:/Users/kc111/AppData/Local/Temp/TableauTemp/17s0sw60rnhk3r1ca1ec50cnq98u/data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Benchmark]' />
            <value name='[Fund]' />
            <value name='[RFR]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[data.csv].[Benchmark]' />
              <field name='[data.csv].[Fund]' />
              <field name='[data.csv].[RFR]' />
            </group>
          </groups>
          <relation connection='textscan.06bz07v1klts131bt6rhb0wdu6by' name='data.csv' table='[C:\Users\kc111\Dev\ftk-tableau\data\data#csv]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:D120:no:A1:D120:1' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='Fund' ordinal='1' />
              <column datatype='real' name='Benchmark' ordinal='2' />
              <column datatype='real' name='RFR' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D120:no:A1:D120:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[data.csv_7D363635FBBA47F099867186D3FDF993]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[data.csv_7D363635FBBA47F099867186D3FDF993]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[data.csv_7D363635FBBA47F099867186D3FDF993]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Cumulative Return' datatype='real' default-format='p0.0000%' name='[Annualized Return (copy)_599823236879335425]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='EXP(SUM(LN(1 + [Calculation_2119788110951030784]))) - 1' />
      </column>
      <column caption='Average Negative Return' datatype='real' default-format='p0.00%' name='[Average Positive Return (copy)_2119788110970658828]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG(IIF([Calculation_2119788110951030784]&lt;0,[Calculation_2119788110951030784],NULL))' />
      </column>
      <column caption='Best Period' datatype='real' default-format='p0.00%' name='[Average Positive Return (copy)_2119788110970834957]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Calculation_2119788110951030784])' />
      </column>
      <column caption='Sortino Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Batting Average (copy)_2465157907743170566]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_2119788110964678660] - EXP(AVG(LN(1 + [Fund (copy)_1953154924772855813])) * 12) + 1) /&#13;&#10;[Standard Deviation (Annualized) (copy)_2465157907742511109]' />
      </column>
      <column caption='Worst Period' datatype='real' default-format='p0.00%' name='[Best Period (copy)_2119788110971039758]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([Calculation_2119788110951030784])' />
      </column>
      <column caption='Up Market Capture Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Best Period (copy)_2465157907736600577]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(EXP(SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, LN(1 + [Calculation_2119788110951030784]), 0)) * 12 / SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, 1, 0))) - 1) /&#13;&#10;(EXP(SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, LN(1 + [Fund (copy)_2119788110951776257]), 0)) * 12 / SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, 1, 0))) - 1) * 100' />
      </column>
      <column caption='Beta (Rfr Adjusted)' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Beta (copy)_1953154924772970502]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([Calculation_2119788110951030784] - [Fund (copy)_1953154924772855813], [Fund (copy)_2119788110951776257] - [Fund (copy)_1953154924772855813]) * stdev([Calculation_2119788110951030784] - [Fund (copy)_1953154924772855813]) / stdev([Fund (copy)_2119788110951776257] - [Fund (copy)_1953154924772855813])' />
      </column>
      <column caption='Alpha (Annualized)' datatype='real' default-format='p0.0000%' name='[Beta (copy)_1953154924773883911]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(1 + AVG([Calculation_2119788110951030784]) - [Calculation_1953154924767375363] * AVG([Fund (copy)_2119788110951776257])) ^ 12 - 1' />
      </column>
      <column caption='Gain/Loss Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Beta (copy)_599823236891279366]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2119788110970159115] / -[Average Positive Return (copy)_2119788110970658828]' />
      </column>
      <column caption='High-water mark' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='//MAX(1,RUNNING_MAX([VAMI (Fund)]))&#13;&#10;MAX(PREVIOUS_VALUE(0), [Calculation_1760344564567093253])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='VAMI (Fund)' datatype='real' name='[Calculation_1760344564567093253]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='//EXP(RUNNING_SUM(LN((SUM([Fund])) + 1)))&#13;&#10;PREVIOUS_VALUE(1) * (1 + SUM([Calculation_2119788110951030784]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Underwater' datatype='real' default-format='p0%' name='[Calculation_1760344564628365320]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1760344564567093253] / [Calculation1] - 1'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Excess Return (Periodic)' datatype='real' name='[Calculation_1953154924763922432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='zn([Calculation_2119788110951030784]) - zn([Fund (copy)_2119788110951776257])' />
      </column>
      <column caption='Tracking Error' datatype='real' default-format='p0.0000%' name='[Calculation_1953154924764000257]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Stdev([Calculation_1953154924763922432]) * SQRT(12)' />
      </column>
      <column caption='Beta' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_1953154924767375363]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Excess Return (copy)_1953154924765515778] * STDEV([Calculation_2119788110951030784]) / Stdev([Fund (copy)_2119788110951776257])' />
      </column>
      <column caption='Batting Average' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_1953154924778414089]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IIF([Calculation_1953154924763922432] &gt; 0, 1, 0)) / COUNT([Calculation_1953154924763922432])' />
      </column>
      <column caption='Fund' datatype='real' name='[Calculation_2119788110951030784]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Date]:&#13;&#10;    SUM(IF [Pivot Field Names] = [Parameters].[Parameter 1] THEN [Pivot Field Values] / 100 END)&#13;&#10;}' />
      </column>
      <column caption='Annualized Return' datatype='real' default-format='p0.0000%' name='[Calculation_2119788110964678660]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='EXP(AVG(LN(1 + [Calculation_2119788110951030784])) * 12) - 1' />
      </column>
      <column caption='Average Return' datatype='real' default-format='p0.0000%' name='[Calculation_2119788110968995849]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_2119788110951030784])' />
      </column>
      <column caption='Average Positive Return' datatype='real' default-format='p0.00%' name='[Calculation_2119788110970159115]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG(IIF([Calculation_2119788110951030784]&gt;=0,[Calculation_2119788110951030784],NULL))' />
      </column>
      <column caption='Number of Observations' datatype='integer' default-format='N' name='[Calculation_2465157907747377167]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Calculation_2119788110951030784])' />
      </column>
      <column caption='Standard Deviation (Annualized)' datatype='real' default-format='p0.0000%' name='[Calculation_2698782137005178880]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='STDEV([Calculation_2119788110951030784]) * SQRT(12)' />
      </column>
      <column caption='R-Squared' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Correlation (copy)_2465157907746508811]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Excess Return (copy)_1953154924765515778] ^ 2' />
      </column>
      <column caption='Skewness' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Correlation (copy)_599823236880527363]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(([Calculation_2119788110951030784] - {FIXED: [Calculation_2119788110968995849]}) ^ 3) / STDEV([Calculation_2119788110951030784]) ^ 3&#13;&#10;* COUNT([Calculation_2119788110951030784]) / (COUNT([Calculation_2119788110951030784]) - 1) / (COUNT([Calculation_2119788110951030784]) - 2)' />
      </column>
      <column caption='Cumulative Excess Return' datatype='real' default-format='p0.0000%' name='[Cumulative Return (copy)_599823236879548418]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Annualized Return (copy)_599823236879335425] - EXP(SUM(LN(1 + [Fund (copy)_2119788110951776257]))) + 1' />
      </column>
      <column caption='Growth of $100' datatype='real' default-format='c&quot;$&quot;#,##0.0000;(&quot;$&quot;#,##0.0000)' name='[Cumulative Return (copy)_599823236890853381]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 * ([Annualized Return (copy)_599823236879335425] + 1)' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='quantitative' />
      <column caption='Up Market Percent' datatype='real' default-format='p0.0000%' name='[Down Market Percent (copy)_2465157907746246666]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0 AND [Calculation_2119788110951030784] &gt; [Fund (copy)_2119788110951776257], 1, 0)) / SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, 1, 0))' />
      </column>
      <column caption='Down Market Percent' datatype='real' default-format='p0.0000%' name='[Down Market Return (copy)_2465157907745808393]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0 AND [Calculation_2119788110951030784] &gt; [Fund (copy)_2119788110951776257], 1, 0)) / SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, 1, 0))' />
      </column>
      <column caption='Excess Return' datatype='real' default-format='p0.0000%' name='[Excess Return (Periodic) (copy)_2465157907752140821]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2119788110964678660] - EXP(AVG(LN(1 + [Fund (copy)_2119788110951776257])) * 12) + 1' />
      </column>
      <column caption='Correlation' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Excess Return (copy)_1953154924765515778]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([Calculation_2119788110951030784], [Fund (copy)_2119788110951776257])' />
      </column>
      <column caption='Excess Returns - Geometric' datatype='real' default-format='p0.0000%' name='[Excess Return (copy)_2465157907752706070]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='EXP(AVG(LN((1 + [Calculation_2119788110951030784]) / (1 + [Fund (copy)_2119788110951776257]))) * 12) - 1' />
      </column>
      <column caption='Rfr' datatype='real' name='[Fund (copy)_1953154924772855813]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Date]:&#13;&#10;    SUM(IF [Pivot Field Names] = [Parameters].[Select a Benchmark (copy)_1953154924772741124] THEN [Pivot Field Values] / 100 END)&#13;&#10;}' />
      </column>
      <column caption='Benchmark' datatype='real' name='[Fund (copy)_2119788110951776257]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Date]:&#13;&#10;    SUM(IF [Pivot Field Names] = [Parameters].[Parameter 2] THEN [Pivot Field Values] / 100 END)&#13;&#10;}' />
      </column>
      <column caption='Semi Deviation' datatype='real' default-format='p0.0000%' name='[Loss Deviation (copy)_2465157907748818964]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SQRT(&#13;&#10;    SUM(&#13;&#10;        IIF(&#13;&#10;            [Calculation_2119788110951030784] &lt; {FIXED: AVG([Calculation_2119788110951030784])},&#13;&#10;            ([Calculation_2119788110951030784] - {FIXED: AVG([Calculation_2119788110951030784])})^2,&#13;&#10;            0&#13;&#10;        )&#13;&#10;    )&#13;&#10;    / (SUM(IIF([Calculation_2119788110951030784] &lt; {FIXED: AVG([Calculation_2119788110951030784])}, 1, 0)) - 1) * 12&#13;&#10;)' />
      </column>
      <column caption='Periods Above Benchmark' datatype='integer' default-format='N' name='[Number of Negative Periods (copy)_2465157907748143123]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IIF([Calculation_2119788110951030784] &gt; [Fund (copy)_2119788110951776257], 1, 0))' />
      </column>
      <column caption='Number of Positive Periods' datatype='integer' default-format='N' name='[Number of Observations (copy)_2465157907747631120]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IIF([Calculation_2119788110951030784] &gt;= 0, 1, 0))' />
      </column>
      <column caption='Number of Negative Periods' datatype='integer' default-format='N' name='[Number of Positive Periods (copy)_2465157907747778577]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IIF([Calculation_2119788110951030784] &lt; 0, 1, 0))' />
      </column>
      <column caption='Vehicle' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
      <column datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <column caption='Kurtosis (Excess)' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Skewness (copy)_599823236882792452]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM((([Calculation_2119788110951030784] - {FIXED: [Calculation_2119788110968995849]}) / {FIXED: STDEV([Calculation_2119788110951030784])}) ^ 4)&#13;&#10;* COUNT([Calculation_2119788110951030784]) * (COUNT([Calculation_2119788110951030784]) + 1) / (COUNT([Calculation_2119788110951030784]) - 1) / (COUNT([Calculation_2119788110951030784]) - 2) / (COUNT([Calculation_2119788110951030784]) - 3)&#13;&#10;- 3 * (COUNT([Calculation_2119788110951030784]) - 1) ^ 2 / (COUNT([Calculation_2119788110951030784]) - 2) / (COUNT([Calculation_2119788110951030784]) - 3)' />
      </column>
      <column caption='Treynor Ratio' datatype='real' default-format='p0.0000%' name='[Sortino Ratio (copy)_2465157907743563783]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_2119788110964678660] - EXP(AVG(LN(1 + [Fund (copy)_1953154924772855813])) * 12) + 1) /&#13;&#10;[Calculation_1953154924767375363]' />
      </column>
      <column caption='Information Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Sortino Ratio (copy)_2465157907745435656]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_2119788110964678660] - EXP(AVG(LN(1 + [Fund (copy)_2119788110951776257])) * 12) + 1) /&#13;&#10;[Calculation_1953154924764000257]' />
      </column>
      <column caption='Reward to Risk Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Sortino Ratio (copy)_2465157907746750476]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2119788110964678660] / [Calculation_2698782137005178880]' />
      </column>
      <column caption='Sharpe Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Sortino Ratio (copy)_2465157907747020813]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_2119788110964678660] - EXP(AVG(LN(1 + [Fund (copy)_1953154924772855813])) * 12) + 1) /&#13;&#10;[Calculation_2698782137005178880]' />
      </column>
      <column caption='Variance (Annualized)' datatype='real' default-format='p0.0000%' name='[Standard Deviation (Annualized) (copy)_2119788110971203599]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='VAR([Calculation_2119788110951030784]) * 12' />
      </column>
      <column caption='Loss Deviation' datatype='real' default-format='p0.0000%' name='[Standard Deviation (Annualized) (copy)_2465157907742511109]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SQRT(SUM(IIF([Calculation_2119788110951030784] &lt; [Fund (copy)_1953154924772855813], ([Calculation_2119788110951030784] - [Fund (copy)_1953154924772855813])^2, 0)) / COUNT([Calculation_2119788110951030784]) * 12)' />
      </column>
      <column caption='Down Market Capture Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Up Market Capture Ratio (copy)_2465157907740274690]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(EXP(SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, LN(1 + [Calculation_2119788110951030784]), 0)) * 12 / SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, 1, 0))) - 1) /&#13;&#10;(EXP(SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, LN(1 + [Fund (copy)_2119788110951776257]), 0)) * 12 / SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, 1, 0))) - 1) * 100' />
      </column>
      <column caption='Up Market Return' datatype='real' default-format='p0.0000%' name='[Up Market Capture Ratio (copy)_2465157907740618755]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(EXP(SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, LN(1 + [Calculation_2119788110951030784]), 0)) * 12 / SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, 1, 0))) - 1)' />
      </column>
      <column caption='Percentage Above Benchmark' datatype='real' default-format='p0.0000%' name='[Up Market Percent (copy)_2465157907747950610]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number of Negative Periods (copy)_2465157907748143123] / [Calculation_2465157907747377167]' />
      </column>
      <column caption='Down Market Return' datatype='real' default-format='p0.0000%' name='[Up Market Return (copy)_2465157907740835844]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(EXP(SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, LN(1 + [Calculation_2119788110951030784]), 0)) * 12 / SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, 1, 0))) - 1)' />
      </column>
      <column caption='VAMI (Benchmark)' datatype='real' name='[VAMI (Fund) (copy)_2119788110953390082]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='EXP(RUNNING_SUM(LN((SUM([Fund (copy)_2119788110951776257])) + 1)))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='data.csv' datatype='table' name='[__tableau_internal_object_id__].[data.csv_7D363635FBBA47F099867186D3FDF993]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[data.csv_7D363635FBBA47F099867186D3FDF993]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data.csv_7D363635FBBA47F099867186D3FDF993:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1953154924763922432]' derivation='Sum' name='[sum:Calculation_1953154924763922432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2119788110951030784]' derivation='Sum' name='[sum:Calculation_2119788110951030784:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fund (copy)_2119788110951776257]' derivation='Sum' name='[sum:Fund (copy)_2119788110951776257:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Annualized Return (copy)_599823236879335425]' derivation='User' name='[usr:Annualized Return (copy)_599823236879335425:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.0r40rqj0micewz15da90h1vee2mc].[Calculation_1760344564567093253]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1760344564567093253]' derivation='User' name='[usr:Calculation_1760344564567093253:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0r40rqj0micewz15da90h1vee2mc].[tmn:Date:qk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1760344564567093253]' derivation='User' name='[usr:Calculation_1760344564567093253:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1760344564628365320]' derivation='User' name='[usr:Calculation_1760344564628365320:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.0r40rqj0micewz15da90h1vee2mc].[Calculation_1760344564567093253]' ordering-field='[federated.0r40rqj0micewz15da90h1vee2mc].[tmn:Date:qk]' ordering-type='Field' />
        <table-calc field='[federated.0r40rqj0micewz15da90h1vee2mc].[Calculation1]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1760344564628365320]' derivation='User' name='[usr:Calculation_1760344564628365320:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.0r40rqj0micewz15da90h1vee2mc].[Calculation_1760344564567093253]' ordering-type='Rows' />
        <table-calc field='[federated.0r40rqj0micewz15da90h1vee2mc].[Calculation1]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_2698782137005178880]' derivation='User' name='[usr:Calculation_2698782137005178880:qk]' pivot='key' type='quantitative' />
      <column-instance column='[VAMI (Fund) (copy)_2119788110953390082]' derivation='User' name='[usr:VAMI (Fund) (copy)_2119788110953390082:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/kc111/AppData/Local/Temp/TableauTemp/#TableauTemp_0iy45jj1535u6r1avkbrl17ylrun.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/24/2025 01:11:19 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>119</approx-count>
              <contains-null>true</contains-null>
              <object-id>[data.csv_7D363635FBBA47F099867186D3FDF993]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Names</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Pivot Field Names]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Names</remote-alias>
              <ordinal>1</ordinal>
              <family>Pivot</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[data.csv_7D363635FBBA47F099867186D3FDF993]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Values</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Pivot Field Values]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Values</remote-alias>
              <ordinal>2</ordinal>
              <family>Pivot</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>352</approx-count>
              <contains-null>true</contains-null>
              <object-id>[data.csv_7D363635FBBA47F099867186D3FDF993]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[sum:Fund (copy)_2119788110951776257:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_2119788110958702595:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:VAMI (Fund) (copy)_2119788110953390082:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_1760344564567093253:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation1:qk:2]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Underwater (copy)_599823236893564935:qk:2]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[sum:Pivot Field Values:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_2698782137005178880:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_2180305230256398336:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_1760344564567093253:qk:1]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_1760344564628365320:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[sum:Calculation_1953154924763922432:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[sum:Calculation_2119788110951030784:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Annualized Return (copy)_599823236879335425:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_1760344564628365320:qk:1]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[__tableau_internal_object_id__].[cnt:data.csv_7D363635FBBA47F099867186D3FDF993:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Pivot Field Names' />
        <field-sort-custom-order field='Pivot Field Values' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Fund' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' source-field='[federated.0r40rqj0micewz15da90h1vee2mc].[Pivot Field Names]' type='nominal' value='&quot;Fund&quot;'>
          <calculation class='tableau' formula='&quot;Fund&quot;' />
        </column>
        <column caption='Select a Benchmark' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' source-field='[federated.0r40rqj0micewz15da90h1vee2mc].[Pivot Field Names]' type='nominal' value='&quot;Benchmark&quot;'>
          <calculation class='tableau' formula='&quot;Benchmark&quot;' />
        </column>
        <column caption='Select a Risk-free rate' datatype='string' name='[Select a Benchmark (copy)_1953154924772741124]' param-domain-type='list' role='measure' source-field='[federated.0r40rqj0micewz15da90h1vee2mc].[Pivot Field Names]' type='nominal' value='&quot;RFR&quot;'>
          <calculation class='tableau' formula='&quot;RFR&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='data.csv' id='data.csv_7D363635FBBA47F099867186D3FDF993'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='string' name='Pivot Field Names' />
                  <column datatype='real' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[Benchmark]' />
                  <value name='[Fund]' />
                  <value name='[RFR]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[data.csv].[Benchmark]' />
                    <field name='[data.csv].[Fund]' />
                    <field name='[data.csv].[RFR]' />
                  </group>
                </groups>
                <relation connection='textscan.06bz07v1klts131bt6rhb0wdu6by' name='data.csv' table='[C:\Users\kc111\Dev\ftk-tableau\data\data#csv]' type='table'>
                  <columns character-set='UTF-8' gridOrigin='A1:D120:no:A1:D120:1' header='yes' locale='en_US' separator=','>
                    <column datatype='date' name='Date' ordinal='0' />
                    <column datatype='real' name='Fund' ordinal='1' />
                    <column datatype='real' name='Benchmark' ordinal='2' />
                    <column datatype='real' name='RFR' ordinal='3' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0r40rqj0micewz15da90h1vee2mc'>
      <datasources>
        <datasource caption='data' name='federated.0r40rqj0micewz15da90h1vee2mc' />
      </datasources>
      <datasource-dependencies datasource='federated.0r40rqj0micewz15da90h1vee2mc'>
        <column datatype='date' name='[Date]' role='dimension' type='quantitative' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.0r40rqj0micewz15da90h1vee2mc].[none:Date:qk]' included-values='in-range-or-null'>
        <min>#2014-11-30#</min>
        <max>#2024-09-30#</max>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Charts'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0r40rqj0micewz15da90h1vee2mc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Fund' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' source-field='[federated.0r40rqj0micewz15da90h1vee2mc].[Pivot Field Names]' type='nominal' value='&quot;Fund&quot;'>
              <calculation class='tableau' formula='&quot;Fund&quot;' />
            </column>
            <column caption='Select a Benchmark' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' source-field='[federated.0r40rqj0micewz15da90h1vee2mc].[Pivot Field Names]' type='nominal' value='&quot;Benchmark&quot;'>
              <calculation class='tableau' formula='&quot;Benchmark&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0r40rqj0micewz15da90h1vee2mc'>
            <column caption='High-water mark' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//MAX(1,RUNNING_MAX([VAMI (Fund)]))&#13;&#10;MAX(PREVIOUS_VALUE(0), [Calculation_1760344564567093253])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='VAMI (Fund)' datatype='real' name='[Calculation_1760344564567093253]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//EXP(RUNNING_SUM(LN((SUM([Fund])) + 1)))&#13;&#10;PREVIOUS_VALUE(1) * (1 + SUM([Calculation_2119788110951030784]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Underwater' datatype='real' default-format='p0%' name='[Calculation_1760344564628365320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1760344564567093253] / [Calculation1] - 1'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Fund' datatype='real' name='[Calculation_2119788110951030784]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Date]:&#13;&#10;    SUM(IF [Pivot Field Names] = [Parameters].[Parameter 1] THEN [Pivot Field Values] / 100 END)&#13;&#10;}' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='quantitative' />
            <column caption='Benchmark' datatype='real' name='[Fund (copy)_2119788110951776257]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Date]:&#13;&#10;    SUM(IF [Pivot Field Names] = [Parameters].[Parameter 2] THEN [Pivot Field Values] / 100 END)&#13;&#10;}' />
            </column>
            <column caption='Vehicle' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column caption='VAMI (Benchmark)' datatype='real' name='[VAMI (Fund) (copy)_2119788110953390082]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='EXP(RUNNING_SUM(LN((SUM([Fund (copy)_2119788110951776257])) + 1)))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760344564567093253]' derivation='User' name='[usr:Calculation_1760344564567093253:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1760344564628365320]' derivation='User' name='[usr:Calculation_1760344564628365320:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0r40rqj0micewz15da90h1vee2mc].[Calculation_1760344564567093253]' ordering-type='Rows' />
              <table-calc field='[federated.0r40rqj0micewz15da90h1vee2mc].[Calculation1]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[VAMI (Fund) (copy)_2119788110953390082]' derivation='User' name='[usr:VAMI (Fund) (copy)_2119788110953390082:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:VAMI (Fund) (copy)_2119788110953390082:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_1760344564567093253:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0r40rqj0micewz15da90h1vee2mc].[none:Date:qk]</column>
            <column>[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0r40rqj0micewz15da90h1vee2mc].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_1760344564628365320:qk:3]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0r40rqj0micewz15da90h1vee2mc].[Multiple Values] + [federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_1760344564628365320:qk:3])</rows>
        <cols>[federated.0r40rqj0micewz15da90h1vee2mc].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{A91BCC2A-EF31-4D12-AAA3-A64FADC4BF8B}' />
    </worksheet>
    <worksheet name='Metrics'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0r40rqj0micewz15da90h1vee2mc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Fund' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' source-field='[federated.0r40rqj0micewz15da90h1vee2mc].[Pivot Field Names]' type='nominal' value='&quot;Fund&quot;'>
              <calculation class='tableau' formula='&quot;Fund&quot;' />
            </column>
            <column caption='Select a Benchmark' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' source-field='[federated.0r40rqj0micewz15da90h1vee2mc].[Pivot Field Names]' type='nominal' value='&quot;Benchmark&quot;'>
              <calculation class='tableau' formula='&quot;Benchmark&quot;' />
            </column>
            <column caption='Select a Risk-free rate' datatype='string' name='[Select a Benchmark (copy)_1953154924772741124]' param-domain-type='list' role='measure' source-field='[federated.0r40rqj0micewz15da90h1vee2mc].[Pivot Field Names]' type='nominal' value='&quot;RFR&quot;'>
              <calculation class='tableau' formula='&quot;RFR&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0r40rqj0micewz15da90h1vee2mc'>
            <column caption='Cumulative Return' datatype='real' default-format='p0.0000%' name='[Annualized Return (copy)_599823236879335425]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='EXP(SUM(LN(1 + [Calculation_2119788110951030784]))) - 1' />
            </column>
            <column caption='Average Negative Return' datatype='real' default-format='p0.00%' name='[Average Positive Return (copy)_2119788110970658828]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(IIF([Calculation_2119788110951030784]&lt;0,[Calculation_2119788110951030784],NULL))' />
            </column>
            <column caption='Best Period' datatype='real' default-format='p0.00%' name='[Average Positive Return (copy)_2119788110970834957]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([Calculation_2119788110951030784])' />
            </column>
            <column caption='Sortino Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Batting Average (copy)_2465157907743170566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_2119788110964678660] - EXP(AVG(LN(1 + [Fund (copy)_1953154924772855813])) * 12) + 1) /&#13;&#10;[Standard Deviation (Annualized) (copy)_2465157907742511109]' />
            </column>
            <column caption='Worst Period' datatype='real' default-format='p0.00%' name='[Best Period (copy)_2119788110971039758]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([Calculation_2119788110951030784])' />
            </column>
            <column caption='Up Market Capture Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Best Period (copy)_2465157907736600577]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(EXP(SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, LN(1 + [Calculation_2119788110951030784]), 0)) * 12 / SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, 1, 0))) - 1) /&#13;&#10;(EXP(SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, LN(1 + [Fund (copy)_2119788110951776257]), 0)) * 12 / SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, 1, 0))) - 1) * 100' />
            </column>
            <column caption='Beta (Rfr Adjusted)' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Beta (copy)_1953154924772970502]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([Calculation_2119788110951030784] - [Fund (copy)_1953154924772855813], [Fund (copy)_2119788110951776257] - [Fund (copy)_1953154924772855813]) * stdev([Calculation_2119788110951030784] - [Fund (copy)_1953154924772855813]) / stdev([Fund (copy)_2119788110951776257] - [Fund (copy)_1953154924772855813])' />
            </column>
            <column caption='Alpha (Annualized)' datatype='real' default-format='p0.0000%' name='[Beta (copy)_1953154924773883911]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(1 + AVG([Calculation_2119788110951030784]) - [Calculation_1953154924767375363] * AVG([Fund (copy)_2119788110951776257])) ^ 12 - 1' />
            </column>
            <column caption='Gain/Loss Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Beta (copy)_599823236891279366]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2119788110970159115] / -[Average Positive Return (copy)_2119788110970658828]' />
            </column>
            <column caption='Excess Return (Periodic)' datatype='real' name='[Calculation_1953154924763922432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='zn([Calculation_2119788110951030784]) - zn([Fund (copy)_2119788110951776257])' />
            </column>
            <column caption='Tracking Error' datatype='real' default-format='p0.0000%' name='[Calculation_1953154924764000257]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Stdev([Calculation_1953154924763922432]) * SQRT(12)' />
            </column>
            <column caption='Beta' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_1953154924767375363]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Excess Return (copy)_1953154924765515778] * STDEV([Calculation_2119788110951030784]) / Stdev([Fund (copy)_2119788110951776257])' />
            </column>
            <column caption='Batting Average' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_1953154924778414089]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IIF([Calculation_1953154924763922432] &gt; 0, 1, 0)) / COUNT([Calculation_1953154924763922432])' />
            </column>
            <column caption='Fund' datatype='real' name='[Calculation_2119788110951030784]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Date]:&#13;&#10;    SUM(IF [Pivot Field Names] = [Parameters].[Parameter 1] THEN [Pivot Field Values] / 100 END)&#13;&#10;}' />
            </column>
            <column caption='Annualized Return' datatype='real' default-format='p0.0000%' name='[Calculation_2119788110964678660]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='EXP(AVG(LN(1 + [Calculation_2119788110951030784])) * 12) - 1' />
            </column>
            <column caption='Average Return' datatype='real' default-format='p0.0000%' name='[Calculation_2119788110968995849]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_2119788110951030784])' />
            </column>
            <column caption='Average Positive Return' datatype='real' default-format='p0.00%' name='[Calculation_2119788110970159115]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(IIF([Calculation_2119788110951030784]&gt;=0,[Calculation_2119788110951030784],NULL))' />
            </column>
            <column caption='Number of Observations' datatype='integer' default-format='N' name='[Calculation_2465157907747377167]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_2119788110951030784])' />
            </column>
            <column caption='Standard Deviation (Annualized)' datatype='real' default-format='p0.0000%' name='[Calculation_2698782137005178880]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='STDEV([Calculation_2119788110951030784]) * SQRT(12)' />
            </column>
            <column caption='R-Squared' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Correlation (copy)_2465157907746508811]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Excess Return (copy)_1953154924765515778] ^ 2' />
            </column>
            <column caption='Skewness' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Correlation (copy)_599823236880527363]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(([Calculation_2119788110951030784] - {FIXED: [Calculation_2119788110968995849]}) ^ 3) / STDEV([Calculation_2119788110951030784]) ^ 3&#13;&#10;* COUNT([Calculation_2119788110951030784]) / (COUNT([Calculation_2119788110951030784]) - 1) / (COUNT([Calculation_2119788110951030784]) - 2)' />
            </column>
            <column caption='Cumulative Excess Return' datatype='real' default-format='p0.0000%' name='[Cumulative Return (copy)_599823236879548418]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Annualized Return (copy)_599823236879335425] - EXP(SUM(LN(1 + [Fund (copy)_2119788110951776257]))) + 1' />
            </column>
            <column caption='Growth of $100' datatype='real' default-format='c&quot;$&quot;#,##0.0000;(&quot;$&quot;#,##0.0000)' name='[Cumulative Return (copy)_599823236890853381]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 * ([Annualized Return (copy)_599823236879335425] + 1)' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='quantitative' />
            <column caption='Up Market Percent' datatype='real' default-format='p0.0000%' name='[Down Market Percent (copy)_2465157907746246666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0 AND [Calculation_2119788110951030784] &gt; [Fund (copy)_2119788110951776257], 1, 0)) / SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, 1, 0))' />
            </column>
            <column caption='Down Market Percent' datatype='real' default-format='p0.0000%' name='[Down Market Return (copy)_2465157907745808393]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0 AND [Calculation_2119788110951030784] &gt; [Fund (copy)_2119788110951776257], 1, 0)) / SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, 1, 0))' />
            </column>
            <column caption='Excess Return' datatype='real' default-format='p0.0000%' name='[Excess Return (Periodic) (copy)_2465157907752140821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2119788110964678660] - EXP(AVG(LN(1 + [Fund (copy)_2119788110951776257])) * 12) + 1' />
            </column>
            <column caption='Correlation' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Excess Return (copy)_1953154924765515778]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([Calculation_2119788110951030784], [Fund (copy)_2119788110951776257])' />
            </column>
            <column caption='Excess Returns - Geometric' datatype='real' default-format='p0.0000%' name='[Excess Return (copy)_2465157907752706070]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='EXP(AVG(LN((1 + [Calculation_2119788110951030784]) / (1 + [Fund (copy)_2119788110951776257]))) * 12) - 1' />
            </column>
            <column caption='Rfr' datatype='real' name='[Fund (copy)_1953154924772855813]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Date]:&#13;&#10;    SUM(IF [Pivot Field Names] = [Parameters].[Select a Benchmark (copy)_1953154924772741124] THEN [Pivot Field Values] / 100 END)&#13;&#10;}' />
            </column>
            <column caption='Benchmark' datatype='real' name='[Fund (copy)_2119788110951776257]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Date]:&#13;&#10;    SUM(IF [Pivot Field Names] = [Parameters].[Parameter 2] THEN [Pivot Field Values] / 100 END)&#13;&#10;}' />
            </column>
            <column caption='Semi Deviation' datatype='real' default-format='p0.0000%' name='[Loss Deviation (copy)_2465157907748818964]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SQRT(&#13;&#10;    SUM(&#13;&#10;        IIF(&#13;&#10;            [Calculation_2119788110951030784] &lt; {FIXED: AVG([Calculation_2119788110951030784])},&#13;&#10;            ([Calculation_2119788110951030784] - {FIXED: AVG([Calculation_2119788110951030784])})^2,&#13;&#10;            0&#13;&#10;        )&#13;&#10;    )&#13;&#10;    / (SUM(IIF([Calculation_2119788110951030784] &lt; {FIXED: AVG([Calculation_2119788110951030784])}, 1, 0)) - 1) * 12&#13;&#10;)' />
            </column>
            <column caption='Periods Above Benchmark' datatype='integer' default-format='N' name='[Number of Negative Periods (copy)_2465157907748143123]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IIF([Calculation_2119788110951030784] &gt; [Fund (copy)_2119788110951776257], 1, 0))' />
            </column>
            <column caption='Number of Positive Periods' datatype='integer' default-format='N' name='[Number of Observations (copy)_2465157907747631120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IIF([Calculation_2119788110951030784] &gt;= 0, 1, 0))' />
            </column>
            <column caption='Number of Negative Periods' datatype='integer' default-format='N' name='[Number of Positive Periods (copy)_2465157907747778577]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IIF([Calculation_2119788110951030784] &lt; 0, 1, 0))' />
            </column>
            <column caption='Vehicle' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column caption='Kurtosis (Excess)' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Skewness (copy)_599823236882792452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM((([Calculation_2119788110951030784] - {FIXED: [Calculation_2119788110968995849]}) / {FIXED: STDEV([Calculation_2119788110951030784])}) ^ 4)&#13;&#10;* COUNT([Calculation_2119788110951030784]) * (COUNT([Calculation_2119788110951030784]) + 1) / (COUNT([Calculation_2119788110951030784]) - 1) / (COUNT([Calculation_2119788110951030784]) - 2) / (COUNT([Calculation_2119788110951030784]) - 3)&#13;&#10;- 3 * (COUNT([Calculation_2119788110951030784]) - 1) ^ 2 / (COUNT([Calculation_2119788110951030784]) - 2) / (COUNT([Calculation_2119788110951030784]) - 3)' />
            </column>
            <column caption='Treynor Ratio' datatype='real' default-format='p0.0000%' name='[Sortino Ratio (copy)_2465157907743563783]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_2119788110964678660] - EXP(AVG(LN(1 + [Fund (copy)_1953154924772855813])) * 12) + 1) /&#13;&#10;[Calculation_1953154924767375363]' />
            </column>
            <column caption='Information Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Sortino Ratio (copy)_2465157907745435656]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_2119788110964678660] - EXP(AVG(LN(1 + [Fund (copy)_2119788110951776257])) * 12) + 1) /&#13;&#10;[Calculation_1953154924764000257]' />
            </column>
            <column caption='Reward to Risk Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Sortino Ratio (copy)_2465157907746750476]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2119788110964678660] / [Calculation_2698782137005178880]' />
            </column>
            <column caption='Sharpe Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Sortino Ratio (copy)_2465157907747020813]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_2119788110964678660] - EXP(AVG(LN(1 + [Fund (copy)_1953154924772855813])) * 12) + 1) /&#13;&#10;[Calculation_2698782137005178880]' />
            </column>
            <column caption='Variance (Annualized)' datatype='real' default-format='p0.0000%' name='[Standard Deviation (Annualized) (copy)_2119788110971203599]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='VAR([Calculation_2119788110951030784]) * 12' />
            </column>
            <column caption='Loss Deviation' datatype='real' default-format='p0.0000%' name='[Standard Deviation (Annualized) (copy)_2465157907742511109]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SQRT(SUM(IIF([Calculation_2119788110951030784] &lt; [Fund (copy)_1953154924772855813], ([Calculation_2119788110951030784] - [Fund (copy)_1953154924772855813])^2, 0)) / COUNT([Calculation_2119788110951030784]) * 12)' />
            </column>
            <column caption='Down Market Capture Ratio' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Up Market Capture Ratio (copy)_2465157907740274690]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(EXP(SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, LN(1 + [Calculation_2119788110951030784]), 0)) * 12 / SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, 1, 0))) - 1) /&#13;&#10;(EXP(SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, LN(1 + [Fund (copy)_2119788110951776257]), 0)) * 12 / SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, 1, 0))) - 1) * 100' />
            </column>
            <column caption='Up Market Return' datatype='real' default-format='p0.0000%' name='[Up Market Capture Ratio (copy)_2465157907740618755]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(EXP(SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, LN(1 + [Calculation_2119788110951030784]), 0)) * 12 / SUM(IIF([Fund (copy)_2119788110951776257] &gt;= 0, 1, 0))) - 1)' />
            </column>
            <column caption='Percentage Above Benchmark' datatype='real' default-format='p0.0000%' name='[Up Market Percent (copy)_2465157907747950610]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Negative Periods (copy)_2465157907748143123] / [Calculation_2465157907747377167]' />
            </column>
            <column caption='Down Market Return' datatype='real' default-format='p0.0000%' name='[Up Market Return (copy)_2465157907740835844]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(EXP(SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, LN(1 + [Calculation_2119788110951030784]), 0)) * 12 / SUM(IIF([Fund (copy)_2119788110951776257] &lt; 0, 1, 0))) - 1)' />
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Annualized Return (copy)_599823236879335425]' derivation='User' name='[usr:Annualized Return (copy)_599823236879335425:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Positive Return (copy)_2119788110970658828]' derivation='User' name='[usr:Average Positive Return (copy)_2119788110970658828:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Positive Return (copy)_2119788110970834957]' derivation='User' name='[usr:Average Positive Return (copy)_2119788110970834957:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Batting Average (copy)_2465157907743170566]' derivation='User' name='[usr:Batting Average (copy)_2465157907743170566:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Best Period (copy)_2119788110971039758]' derivation='User' name='[usr:Best Period (copy)_2119788110971039758:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Best Period (copy)_2465157907736600577]' derivation='User' name='[usr:Best Period (copy)_2465157907736600577:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Beta (copy)_1953154924772970502]' derivation='User' name='[usr:Beta (copy)_1953154924772970502:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Beta (copy)_1953154924773883911]' derivation='User' name='[usr:Beta (copy)_1953154924773883911:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Beta (copy)_599823236891279366]' derivation='User' name='[usr:Beta (copy)_599823236891279366:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1953154924764000257]' derivation='User' name='[usr:Calculation_1953154924764000257:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1953154924767375363]' derivation='User' name='[usr:Calculation_1953154924767375363:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1953154924778414089]' derivation='User' name='[usr:Calculation_1953154924778414089:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2119788110964678660]' derivation='User' name='[usr:Calculation_2119788110964678660:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2119788110968995849]' derivation='User' name='[usr:Calculation_2119788110968995849:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2119788110970159115]' derivation='User' name='[usr:Calculation_2119788110970159115:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2465157907747377167]' derivation='User' name='[usr:Calculation_2465157907747377167:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2698782137005178880]' derivation='User' name='[usr:Calculation_2698782137005178880:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Correlation (copy)_2465157907746508811]' derivation='User' name='[usr:Correlation (copy)_2465157907746508811:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Correlation (copy)_599823236880527363]' derivation='User' name='[usr:Correlation (copy)_599823236880527363:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative Return (copy)_599823236879548418]' derivation='User' name='[usr:Cumulative Return (copy)_599823236879548418:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative Return (copy)_599823236890853381]' derivation='User' name='[usr:Cumulative Return (copy)_599823236890853381:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Down Market Percent (copy)_2465157907746246666]' derivation='User' name='[usr:Down Market Percent (copy)_2465157907746246666:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Down Market Return (copy)_2465157907745808393]' derivation='User' name='[usr:Down Market Return (copy)_2465157907745808393:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Excess Return (Periodic) (copy)_2465157907752140821]' derivation='User' name='[usr:Excess Return (Periodic) (copy)_2465157907752140821:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Excess Return (copy)_1953154924765515778]' derivation='User' name='[usr:Excess Return (copy)_1953154924765515778:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Excess Return (copy)_2465157907752706070]' derivation='User' name='[usr:Excess Return (copy)_2465157907752706070:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Loss Deviation (copy)_2465157907748818964]' derivation='User' name='[usr:Loss Deviation (copy)_2465157907748818964:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Negative Periods (copy)_2465157907748143123]' derivation='User' name='[usr:Number of Negative Periods (copy)_2465157907748143123:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Observations (copy)_2465157907747631120]' derivation='User' name='[usr:Number of Observations (copy)_2465157907747631120:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Positive Periods (copy)_2465157907747778577]' derivation='User' name='[usr:Number of Positive Periods (copy)_2465157907747778577:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Skewness (copy)_599823236882792452]' derivation='User' name='[usr:Skewness (copy)_599823236882792452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sortino Ratio (copy)_2465157907743563783]' derivation='User' name='[usr:Sortino Ratio (copy)_2465157907743563783:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sortino Ratio (copy)_2465157907745435656]' derivation='User' name='[usr:Sortino Ratio (copy)_2465157907745435656:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sortino Ratio (copy)_2465157907746750476]' derivation='User' name='[usr:Sortino Ratio (copy)_2465157907746750476:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sortino Ratio (copy)_2465157907747020813]' derivation='User' name='[usr:Sortino Ratio (copy)_2465157907747020813:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Standard Deviation (Annualized) (copy)_2119788110971203599]' derivation='User' name='[usr:Standard Deviation (Annualized) (copy)_2119788110971203599:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Standard Deviation (Annualized) (copy)_2465157907742511109]' derivation='User' name='[usr:Standard Deviation (Annualized) (copy)_2465157907742511109:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Up Market Capture Ratio (copy)_2465157907740274690]' derivation='User' name='[usr:Up Market Capture Ratio (copy)_2465157907740274690:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Up Market Capture Ratio (copy)_2465157907740618755]' derivation='User' name='[usr:Up Market Capture Ratio (copy)_2465157907740618755:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Up Market Percent (copy)_2465157907747950610]' derivation='User' name='[usr:Up Market Percent (copy)_2465157907747950610:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Up Market Return (copy)_2465157907740835844]' derivation='User' name='[usr:Up Market Return (copy)_2465157907740835844:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Beta (copy)_1953154924773883911:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_2119788110964678660:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Average Positive Return (copy)_2119788110970658828:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_2119788110970159115:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_2119788110968995849:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_1953154924778414089:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Average Positive Return (copy)_2119788110970834957:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_1953154924767375363:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Beta (copy)_1953154924772970502:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Excess Return (copy)_1953154924765515778:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Cumulative Return (copy)_599823236879548418:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Annualized Return (copy)_599823236879335425:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Up Market Capture Ratio (copy)_2465157907740274690:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Down Market Return (copy)_2465157907745808393:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Up Market Return (copy)_2465157907740835844:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Excess Return (Periodic) (copy)_2465157907752140821:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Excess Return (copy)_2465157907752706070:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Beta (copy)_599823236891279366:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Cumulative Return (copy)_599823236890853381:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Sortino Ratio (copy)_2465157907745435656:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Skewness (copy)_599823236882792452:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Standard Deviation (Annualized) (copy)_2465157907742511109:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Number of Positive Periods (copy)_2465157907747778577:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_2465157907747377167:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Number of Observations (copy)_2465157907747631120:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Up Market Percent (copy)_2465157907747950610:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Number of Negative Periods (copy)_2465157907748143123:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Correlation (copy)_2465157907746508811:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Sortino Ratio (copy)_2465157907746750476:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Loss Deviation (copy)_2465157907748818964:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Sortino Ratio (copy)_2465157907747020813:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Correlation (copy)_599823236880527363:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Batting Average (copy)_2465157907743170566:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_2698782137005178880:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_1953154924764000257:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Sortino Ratio (copy)_2465157907743563783:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Best Period (copy)_2465157907736600577:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Down Market Percent (copy)_2465157907746246666:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Up Market Capture Ratio (copy)_2465157907740618755:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Standard Deviation (Annualized) (copy)_2119788110971203599:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Best Period (copy)_2119788110971039758:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_2119788110964678660:qk]&quot;</bucket>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[usr:Calculation_2698782137005178880:qk]&quot;</bucket>
              <bucket>&quot;[federated.0r40rqj0micewz15da90h1vee2mc].[sum:Calculation_2119788110958702595:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0r40rqj0micewz15da90h1vee2mc].[none:Date:qk]</column>
            <column>[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]' value='252' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.0r40rqj0micewz15da90h1vee2mc].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{A3FC4ACE-AB5C-4208-8100-4679464AE394}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' sizing-mode='range' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='data' name='federated.0r40rqj0micewz15da90h1vee2mc' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Fund' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' source-field='[federated.0r40rqj0micewz15da90h1vee2mc].[Pivot Field Names]' type='nominal' value='&quot;Fund&quot;'>
          <calculation class='tableau' formula='&quot;Fund&quot;' />
        </column>
        <column caption='Select a Benchmark' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' source-field='[federated.0r40rqj0micewz15da90h1vee2mc].[Pivot Field Names]' type='nominal' value='&quot;Benchmark&quot;'>
          <calculation class='tableau' formula='&quot;Benchmark&quot;' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0r40rqj0micewz15da90h1vee2mc'>
        <column datatype='date' name='[Date]' role='dimension' type='quantitative' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97516' id='19' param='horz' type-v2='layout-flow' w='97538' x='1231' y='1242'>
            <zone h='97516' id='17' type-v2='layout-basic' w='72923' x='1231' y='1242'>
              <zone h='48758' id='15' name='Metrics' w='72923' x='1231' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48758' id='24' name='Charts' w='72923' x='1231' y='1242'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97516' id='18' is-fixed='true' param='vert' type-v2='layout-flow' w='24615' x='74154' y='1242'>
              <zone h='43015' id='20' name='Metrics' param='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]' type-v2='filter' w='24615' x='74154' y='1242'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11335' id='21' name='Metrics' param='[federated.0r40rqj0micewz15da90h1vee2mc].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='24615' x='74154' y='44257'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8695' id='22' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='24615' x='74154' y='55592'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8695' id='23' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='24615' x='74154' y='64287'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11335' id='25' name='Charts' param='[federated.0r40rqj0micewz15da90h1vee2mc].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='24615' x='74154' y='72982'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14441' id='26' name='Charts' pane-specification-id='6' param='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]' type-v2='color' w='24615' x='74154' y='84317'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout active='true' name='Desktop'>
          <size sizing-mode='automatic' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98438' id='19' param='horz' type-v2='layout-flow' w='98828' x='586' y='781'>
                <zone h='98438' id='17' type-v2='layout-basic' w='87115' x='586' y='781'>
                  <zone h='98438' id='15' name='Metrics' w='26427' x='61274' y='781'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='98438' id='24' name='Charts' w='60688' x='586' y='781'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='98438' id='18' is-fixed='true' param='vert' type-v2='layout-flow' w='11713' x='87701' y='781'>
                  <zone h='7129' id='21' name='Metrics' param='[federated.0r40rqj0micewz15da90h1vee2mc].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' values='relevant' w='11713' x='87701' y='781'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5469' id='22' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11713' x='87701' y='7910'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5469' id='23' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='11713' x='87701' y='13379'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7129' id='25' name='Charts' param='[federated.0r40rqj0micewz15da90h1vee2mc].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11713' x='87701' y='18848'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9082' id='26' name='Charts' pane-specification-id='6' param='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]' type-v2='color' w='11713' x='87701' y='25977'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='64160' id='20' name='Metrics' param='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]' show-all='false' type-v2='filter' w='11713' x='87701' y='35059'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{12A49853-BF97-44FB-924B-0D44F9C0A410}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Metrics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.0r40rqj0micewz15da90h1vee2mc].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D285100A-22FA-444C-837A-DA1AADBAD6D2}' />
    </window>
    <window class='worksheet' name='Charts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.0r40rqj0micewz15da90h1vee2mc].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Select a Benchmark (copy)_1953154924772741124]' type='parameter' />
            <card pane-specification-id='6' param='[federated.0r40rqj0micewz15da90h1vee2mc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CA8A25C7-D4DD-4187-8322-3FEE2E1E7498}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Charts'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Metrics' />
      </viewpoints>
      <active id='-1' />
      <device-preview selected='Tablet' visible='true'>
        <device name='iPad Pro 12.9-inch' type='Desktop' />
      </device-preview>
      <simple-id uuid='{4B86AAAE-8AA9-43E2-9FEA-67A890FF774F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Charts' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Metrics' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
